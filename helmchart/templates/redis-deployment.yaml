{{- if .Values.redis.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-redis
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
        ports:
        - containerPort: {{ .Values.redis.service.port }}
        command: ["redis-server", "--appendonly", "yes"]
        resources:
          {{- toYaml .Values.redis.resources | nindent 12 }}
        {{- if .Values.redis.persistence.enabled }}
        volumeMounts:
        - name: redis-data
          mountPath: /data
        {{- end }}
      {{- if .Values.redis.exporter.enabled }}
      - name: redis-exporter
        image: "{{ .Values.redis.exporter.image.repository }}:{{ .Values.redis.exporter.image.tag }}"
        ports:
        - containerPort: {{ .Values.redis.exporter.port }}
          name: metrics
        env:
        - name: REDIS_ADDR
          value: "redis://127.0.0.1:{{ .Values.redis.service.port }}"
        resources:
          {{- toYaml .Values.redis.exporter.resources | nindent 12 }}
      {{- end }}
      {{- if .Values.redis.persistence.enabled }}
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-redis-pvc
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-redis
  labels:
    app: redis
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: {{ .Values.redis.service.port }}
      targetPort: {{ .Values.redis.service.port }}
      name: redis
    {{- if .Values.redis.exporter.enabled }}
    - protocol: TCP
      port: {{ .Values.redis.exporter.port }}
      targetPort: {{ .Values.redis.exporter.port }}
      name: metrics
    {{- end }}
{{- if .Values.redis.persistence.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-redis-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.redis.persistence.size }}
  {{- if .Values.redis.persistence.storageClass }}
  storageClassName: {{ .Values.redis.persistence.storageClass }}
  {{- end }}
{{- end }}
{{- end }}
