## trigger commit for login
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-nodejs-app
  labels:
    app: nodejs-app
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: nodejs-app
  template:
    metadata:
      labels:
        app: nodejs-app
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 3000
        env:
        {{- if .Values.redis.enabled }}
        - name: REDIS_URL
          value: "redis://{{ .Release.Name }}-redis:{{ .Values.redis.service.port }}"
        {{- end }}
        {{- if .Values.mongodb.enabled }}
        - name: MONGO_URL
          value: "mongodb://{{ .Values.mongodb.auth.rootUsername }}:{{ .Values.mongodb.auth.rootPassword }}@{{ .Release.Name }}-mongodb:{{ .Values.mongodb.service.port }}"
        - name: MONGO_DB_NAME
          value: "{{ .Values.mongodb.auth.database }}"
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
        # volumeMounts:
        # - name: tls-certs
        #   mountPath: /etc/tls
        #   readOnly: true
      imagePullSecrets:
        - name: ondia-pull
      # volumes:
      # - name: tls-certs
      #   secret:
      #     secretName: pushgateway-certs